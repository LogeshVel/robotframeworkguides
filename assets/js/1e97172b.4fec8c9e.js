"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5368],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=o,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},108:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_label:"Project Structure",title:"Project Structure"},i=void 0,l={unversionedId:"examples/project_structure",id:"examples/project_structure",title:"Project Structure",description:"Root Folder",source:"@site/docs/examples/project_structure.mdx",sourceDirName:"examples",slug:"/examples/project_structure",permalink:"/docs/examples/project_structure",draft:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/examples/project_structure.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Project Structure",title:"Project Structure"},sidebar:"tutorialSidebar",previous:{title:"MFA Login",permalink:"/docs/examples/mfa_login"},next:{title:"Restful Booker",permalink:"/docs/examples/restfulbooker"}},s={},p=[{value:"Root Folder",id:"root-folder",level:2},{value:"Test Suites",id:"test-suites",level:2},{value:"Resources",id:"resources",level:2},{value:"Libraries",id:"libraries",level:2},{value:"Examples",id:"examples",level:2},{value:"Simple Project with <code>tests/</code> and <code>resources/</code> folders:",id:"simple-project-with-tests-and-resources-folders",level:3},{value:"Project with <code>tests/</code>, <code>resources/</code> and <code>data/</code> folders:",id:"project-with-tests-resources-and-data-folders",level:3},{value:"Telling Robot Framework where to search libraries, resource and variable files",id:"telling-robot-framework-where-to-search-libraries-resource-and-variable-files",level:2},{value:"Good Practice: Use <code>--pythonpath</code> command line argument and <code>resources/</code> subfolder",id:"good-practice-use---pythonpath-command-line-argument-and-resources-subfolder",level:3},{value:"Run from shell",id:"run-from-shell",level:4},{value:"Run from IDE",id:"run-from-ide",level:4},{value:"Run from CI/CD",id:"run-from-cicd",level:4},{value:"Using CI_PROJECT_DIR variable",id:"using-ci_project_dir-variable",level:4},{value:"Resource file in the same directory as the Test Suite file",id:"resource-file-in-the-same-directory-as-the-test-suite-file",level:3},{value:"Using absolute paths with <code>${CURDIR}</code> and <code>resources/</code> subfolder",id:"using-absolute-paths-with-curdir-and-resources-subfolder",level:3},{value:"More subfolders means more <code>..</code> in the path",id:"more-subfolders-means-more--in-the-path",level:4},{value:"Using <code>--pythonpath</code> command line argument and <code>resources/</code> subfolder",id:"using---pythonpath-command-line-argument-and-resources-subfolder",level:3},{value:"Using <code>PYTHONPATH</code> environment variable",id:"using-pythonpath-environment-variable",level:3}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"root-folder"},"Root Folder"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"requirements.txt")," - Python dependencies or"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pyproject.toml")," - Python dependencies"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Readme.md")," - Project description"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},".gitignore")," - Lists files and folders to be ignored by git")),(0,o.kt)("p",null,"Depending on the project, the root folder can contain additional files, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," for a GitLab CI Pipeline."),(0,o.kt)("h2",{id:"test-suites"},"Test Suites"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Test Suites")," are located in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tests/")," folder.",(0,o.kt)("br",{parentName:"p"}),"\n","Depending on the project, the Test Suites can be organized in multiple ",(0,o.kt)("inlineCode",{parentName:"p"},".robot")," files and subfolders."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tests/")," - Test Suites folder",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"search.robot")," - Test Suite for Search functionality"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"login.robot")," - Test Suite for Log In functionality"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"checkout/")," - Folder containing Test Suites for Checkout",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"checkout_basic.robot")," - Test Suites for standard Checkout"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"checkout_premium.robot")," - Test Suites for premium Checkout"))),(0,o.kt)("li",{parentName:"ul"},"...")))),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("p",null,"Reusable keywords are stored in ",(0,o.kt)("inlineCode",{parentName:"p"},".resource")," files in the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," folder.",(0,o.kt)("br",{parentName:"p"}),"\n","Also ",(0,o.kt)("inlineCode",{parentName:"p"},"Python")," keywords in ",(0,o.kt)("inlineCode",{parentName:"p"},".py")," files can be stored there."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"resources/")," - Reusable keywords",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"common.robot")," - General Keywords (e.g. Login/Logout, Navigation, ...) are stored here"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"search.robot")," - Keywords for searching are stored here"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"utils.py")," - Python helper keywords are stored here"),(0,o.kt)("li",{parentName:"ul"},"...")))),(0,o.kt)("h2",{id:"libraries"},"Libraries"),(0,o.kt)("p",null,"Custom Python Keyword libraries can be stored in a separate ",(0,o.kt)("inlineCode",{parentName:"p"},"libraries/")," folder, if needed.",(0,o.kt)("br",{parentName:"p"}),"\n","Some projects like to seperate the ",(0,o.kt)("inlineCode",{parentName:"p"},"libraries/")," from the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/"),"."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Find some example project structures below."),(0,o.kt)("h3",{id:"simple-project-with-tests-and-resources-folders"},"Simple Project with ",(0,o.kt)("inlineCode",{parentName:"h3"},"tests/")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"resources/")," folders:"),(0,o.kt)("p",null,"A flat project structure for a simple project with a few test cases and keywords.",(0,o.kt)("br",{parentName:"p"}),"\n","All test suites are in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tests/")," folder and all keywords, variables and python libraries are in the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/")," folder.",(0,o.kt)("br",{parentName:"p"}),"\n","The project root folder contains the ",(0,o.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," file for CI/CD, the ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")," file for git, the ",(0,o.kt)("inlineCode",{parentName:"p"},"README.md")," file for documentation and the ",(0,o.kt)("inlineCode",{parentName:"p"},"requirements.txt")," file for dependencies."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 suiteA.robot\n\u2502   \u251c\u2500\u2500 suiteB.robot\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \n\u251c\u2500\u2500 resources\n\u2502   \u251c\u2500\u2500 common.resource\n\u2502   \u251c\u2500\u2500 some_other.resource\n\u2502   \u251c\u2500\u2500 custom_library.py\n\u2502   \u251c\u2500\u2500 variables.py\n\u2502   \u251c\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 .gitlab-ci.yml\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements.txt\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  resources/common.resource\nResource  resources/some_other.resource\nLibrary   resources/custom_library.py\nVariables resources/variables.py\n...\n")),(0,o.kt)("p",null,"Tests can be run with the following command (assuming you are in the project root folder ",(0,o.kt)("inlineCode",{parentName:"p"},"my_project"),"):  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot --pythonpath . tests\n")),(0,o.kt)("h3",{id:"project-with-tests-resources-and-data-folders"},"Project with ",(0,o.kt)("inlineCode",{parentName:"h3"},"tests/"),", ",(0,o.kt)("inlineCode",{parentName:"h3"},"resources/")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"data/")," folders:"),(0,o.kt)("p",null,"A project structure for a more complex project with a more test cases and keywords.",(0,o.kt)("br",{parentName:"p"}),"\n","Test Suites are organized in subfolders in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tests/")," folder.\nKeywords, variables and python libraries are organized in subfolders in the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/")," folder.\nTest Data files - like Python or Yaml Variable files - are organized in subfolders in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data/")," folder.",(0,o.kt)("br",{parentName:"p"}),"\n","The project root folder contains the ",(0,o.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," file for CI/CD, the ",(0,o.kt)("inlineCode",{parentName:"p"},".gitignore")," file for git, the ",(0,o.kt)("inlineCode",{parentName:"p"},"README.md")," file for documentation and the ",(0,o.kt)("inlineCode",{parentName:"p"},"requirements.txt")," file for dependencies."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 authentication\n\u2502   \u2502   \u251c\u2500\u2500 login.robot\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 master-data\n\u2502   \u2502   \u251c\u2500\u2500 customers.robot\n\u2502   \u2502   \u251c\u2500\u2500 products.robot\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 order\n\u2502   \u2502   \u251c\u2500\u2500 order_creation.robot\n\u2502   \u2502   \u251c\u2500\u2500 order_processing.robot\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \n\u251c\u2500\u2500 resources\n\u2502   \u251c\u2500\u2500 common.resource\n\u2502   \u251c\u2500\u2500 search.resource\n\u2502   \u251c\u2500\u2500 master-data\n\u2502   \u2502   \u251c\u2500\u2500 customers.resource\n\u2502   \u2502   \u251c\u2500\u2500 products.resource\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 master-data\n\u2502   \u2502   \u251c\u2500\u2500 customers.py\n\u2502   \u2502   \u251c\u2500\u2500 products.py\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 order\n\u2502   \u2502   \u251c\u2500\u2500 order_creation.yaml\n\u2502   \u2502   \u251c\u2500\u2500 order_processing.yaml\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 .gitlab-ci.yml\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements.txt\n")),(0,o.kt)("p",null,"The tests/authentication/login.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  resources/common.resource\nResource  resources/search.resource\nResource  resources/master-data/customers.resource\nVariables data/master-data/customers.py\n...\n")),(0,o.kt)("p",null,"Tests can be run with the following command (assuming you are in the project root folder ",(0,o.kt)("inlineCode",{parentName:"p"},"my_project"),"):  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot --pythonpath . tests\n")),(0,o.kt)("h2",{id:"telling-robot-framework-where-to-search-libraries-resource-and-variable-files"},"Telling Robot Framework where to search libraries, resource and variable files"),(0,o.kt)("p",null,"Robot Framework searches for libraries, resource and variable files in  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the same directory as the test suite file (or resource file) which imports the library, resource or variable file"),(0,o.kt)("li",{parentName:"ul"},"the directories listed in ",(0,o.kt)("inlineCode",{parentName:"li"},"PYTHONPATH")," environment variable"),(0,o.kt)("li",{parentName:"ul"},"the directories passed in ",(0,o.kt)("inlineCode",{parentName:"li"},"--pythonpath")," command line argument")),(0,o.kt)("p",null,"The examples below will focus on resource files, but the same applies to libraries and variables."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"It is always possible to use absolute paths in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Resource"),",",(0,o.kt)("inlineCode",{parentName:"p"},"Library")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Variables")," statements.",(0,o.kt)("br",{parentName:"p"}),"\n","Especially with the ",(0,o.kt)("inlineCode",{parentName:"p"},"${CURDIR}")," variable, it is easy to construct absolute paths relative to the current file.",(0,o.kt)("br",{parentName:"p"}),"\n","However, this is not recommended, as it makes the tests less portable.")),(0,o.kt)("p",null,"You can find more information about the search order in the ",(0,o.kt)("a",{parentName:"p",href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#configuring-where-to-search-libraries-and-other-extensions"},"Robot Framework User Guide"),"."),(0,o.kt)("h3",{id:"good-practice-use---pythonpath-command-line-argument-and-resources-subfolder"},"Good Practice: Use ",(0,o.kt)("inlineCode",{parentName:"h3"},"--pythonpath")," command line argument and ",(0,o.kt)("inlineCode",{parentName:"h3"},"resources/")," subfolder"),(0,o.kt)("p",null,"Before we look at the other options, let's look at the recommended approach.\nOrganize your files in subfolders (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"libraries/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"data/"),") and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," command line argument to add the project root folder to the search path.  "),(0,o.kt)("p",null,"In that case, resources can be imported with a relative path from the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/")," folder (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"Resource  resources/common.resource"),") and libraries can be imported with a relative path from the ",(0,o.kt)("inlineCode",{parentName:"p"},"libraries/")," folder (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"Library  libraries/custom_library.py"),")."),(0,o.kt)("p",null,"Let's assume we have the following project structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 suiteA.robot\n\u2514\u2500\u2500 resources\n    \u251c\u2500\u2500 general.resource\n    \u2514\u2500\u2500 auth/\n        \u251c\u2500\u2500 login.resource\n        \u2514\u2500\u2500 totp.py\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  resources/general.resource\nResource  resources/auth/login.resource\nLibrary   resources/auth/totp.py\n...\n")),(0,o.kt)("h4",{id:"run-from-shell"},"Run from shell"),(0,o.kt)("p",null,"You can run the tests with the following command (assuming you are in the project root folder ",(0,o.kt)("inlineCode",{parentName:"p"},"my_project"),"):  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot --pythonpath . tests/suiteA.robot\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},".")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath"),' argument means "the current directory".',(0,o.kt)("br",{parentName:"p"}),"\n","In this case, the current directory is the project root folder ",(0,o.kt)("inlineCode",{parentName:"p"},"my_project"),".")),(0,o.kt)("h4",{id:"run-from-ide"},"Run from IDE"),(0,o.kt)("p",null,"To run the tests directly from your IDE, you also need to configure the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," argument in your IDE.",(0,o.kt)("br",{parentName:"p"}),"\n","In ",(0,o.kt)("inlineCode",{parentName:"p"},"VS Code")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"RobotCode")," extension, you can add the following line to your ",(0,o.kt)("inlineCode",{parentName:"p"},"settings.json")," file.",(0,o.kt)("br",{parentName:"p"}),"\n","You can also find the setting under ",(0,o.kt)("inlineCode",{parentName:"p"},"File > Preferences > Settings")," by searching for ",(0,o.kt)("inlineCode",{parentName:"p"},"robotcode.robot.pythonPath"),".  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"robotcode.robot.pythonPath": [\n    "./"\n    ],\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can also add the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/")," , ",(0,o.kt)("inlineCode",{parentName:"p"},"lib/")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"keyword/")," folders  to the ",(0,o.kt)("inlineCode",{parentName:"p"},"pythonPath")," setting:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"robotcode.robot.pythonPath": [\n    "./",\n    "./lib",\n    "./resources",\n    "./keywords",\n    ],\n')),(0,o.kt)("p",{parentName:"admonition"},"That way, you can import libraries, resources and variables from the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lib/")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"keyword/")," folders without the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lib/")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"keyword/")," prefix."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  general.resource\nResource  auth/login.resource\nLibrary   auth/totp.py\n...\n"))),(0,o.kt)("h4",{id:"run-from-cicd"},"Run from CI/CD"),(0,o.kt)("p",null,"To run the tests from CI/CD, you also need to configure the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," argument in your CI/CD pipeline."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"```yaml\nrobot:\n  stage: test\n  image: python:3.8\n  script:\n    - pip install -r requirements.txt\n    - robot --pythonpath . tests/\n```\n")),(0,o.kt)("h4",{id:"using-ci_project_dir-variable"},"Using CI_PROJECT_DIR variable"),(0,o.kt)("p",null,"If you are using GitLab CI/CD, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"CI_PROJECT_DIR")," variable to construct the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," argument.",(0,o.kt)("br",{parentName:"p"}),"\n","The ",(0,o.kt)("inlineCode",{parentName:"p"},"CI_PROJECT_DIR")," variable contains the absolute path to the project root folder.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"```yaml\nrobot:\n  stage: test\n  image: python:3.8\n  script:\n    - pip install -r requirements.txt\n    - robot --pythonpath $CI_PROJECT_DIR tests/\n```  \n")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"resource-file-in-the-same-directory-as-the-test-suite-file"},"Resource file in the same directory as the Test Suite file"),(0,o.kt)("p",null,"Let's assume we have the following project structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 suiteA.robot\n    \u2514\u2500\u2500 general.resource\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  general.resource\n...\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file can import the general.resource file without any additional configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot tests/suiteA.robot\n")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"using-absolute-paths-with-curdir-and-resources-subfolder"},"Using absolute paths with ",(0,o.kt)("inlineCode",{parentName:"h3"},"${CURDIR}")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"resources/")," subfolder"),(0,o.kt)("p",null,"Let's assume we have the following project structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 suiteA.robot\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 general.resource\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  ${CURDIR}/../resources/general.resource\n...\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"${CURDIR}")," variable contains the absolute path to the directory of the current file.",(0,o.kt)("br",{parentName:"p"}),"\n","The ",(0,o.kt)("inlineCode",{parentName:"p"},".."),' in the path means "one directory up".',(0,o.kt)("br",{parentName:"p"}),"\n","This way, the tests/suiteA.robot file can import the general.resource file without any additional configuration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot tests/suiteA.robot\n")),(0,o.kt)("h4",{id:"more-subfolders-means-more--in-the-path"},"More subfolders means more ",(0,o.kt)("inlineCode",{parentName:"h4"},"..")," in the path"),(0,o.kt)("p",null,"Let's assume we have the following project structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 suiteA.robot\n\u2502   \u2514\u2500\u2500 topicB\n\u2502       \u2514\u2500\u2500 suiteB.robot\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 auth\n        \u2514\u2500\u2500 login.resource\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  ${CURDIR}/../resources/auth/login.resource\n...\n")),(0,o.kt)("p",null,"The tests/topicB/suiteB.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  ${CURDIR}/../../resources/auth/login.resource\n...\n")),(0,o.kt)("p",null,"You can see that the number of ",(0,o.kt)("inlineCode",{parentName:"p"},"..")," in the path depends on the number of subfolders between the test suite file and the resource file.",(0,o.kt)("br",{parentName:"p"}),"\n","Because of that, it is recommended to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," command line argument instead of absolute paths."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"using---pythonpath-command-line-argument-and-resources-subfolder"},"Using ",(0,o.kt)("inlineCode",{parentName:"h3"},"--pythonpath")," command line argument and ",(0,o.kt)("inlineCode",{parentName:"h3"},"resources/")," subfolder"),(0,o.kt)("p",null,"Let's assume we have the following project structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 suiteA.robot\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 general.resource\n")),(0,o.kt)("p",null,"The tests/suiteA.robot file looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  resources/general.resource\n...\n")),(0,o.kt)("p",null,"To run the tests, we need to tell Robot Framework where to search for the libraries, resource and variable files.\nIf we run it without any arguments, we will get an error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot tests/suiteA.robot\n[Error] Error in file 'tests/suiteA.robot': ...\nResource file 'resources/general.resource' does not exist.\n...\n")),(0,o.kt)("p",null,"We can add the project root folder ",(0,o.kt)("inlineCode",{parentName:"p"},"my_project/")," folder to the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," command line argument:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot --pythonpath . tests/suiteA.robot\n")),(0,o.kt)("p",null,"Now the tests run successfully."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can also add the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/")," , ",(0,o.kt)("inlineCode",{parentName:"p"},"lib/")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"keyword/")," folders  to the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," setting:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ robot --pythonpath .:./lib:./resources:./keywords tests/suiteA.robot\n")),(0,o.kt)("p",{parentName:"admonition"},"That way, you can import libraries, resources and variables from the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lib/")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"keyword/")," folders without the ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"lib/")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"keyword/")," prefix."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Settings ***\nResource  general.resource\nResource  auth/login.resource\nLibrary   auth/totp.py\n...\n"))),(0,o.kt)("h3",{id:"using-pythonpath-environment-variable"},"Using ",(0,o.kt)("inlineCode",{parentName:"h3"},"PYTHONPATH")," environment variable"),(0,o.kt)("p",null,"Alternatively, you can add the path to your project root folder to the ",(0,o.kt)("inlineCode",{parentName:"p"},"PYTHONPATH")," environment variable.",(0,o.kt)("br",{parentName:"p"}),"\n","Then you can run the tests without the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pythonpath")," command line argument (assuming you are in the project root folder ",(0,o.kt)("inlineCode",{parentName:"p"},"my_project"),"):  "),(0,o.kt)("p",null,"Bash"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ export PYTHONPATH=$PYTHONPATH:.\n$ robot tests/suiteA.robot\n")),(0,o.kt)("p",null,"PowerShell"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'> $env:PYTHONPATH += ";."\n> robot tests/suiteA.robot\n')))}c.isMDXComponent=!0}}]);