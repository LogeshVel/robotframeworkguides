"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5513],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>y});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),m=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=m(e.components);return n.createElement(o.Provider,{value:a},e.children)},b="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=m(t),c=r,y=b["".concat(o,".").concat(c)]||b[c]||d[c]||i;return t?n.createElement(y,l(l({ref:a},p),{},{components:t})):n.createElement(y,l({ref:a},p))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=c;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s[b]="string"==typeof e?e:r,l[1]=s;for(var m=2;m<i;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7407:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>b,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var n=t(7462),r=(t(7294),t(3905));const i={sidebar_label:"Variables",title:"Variables"},l=void 0,s={unversionedId:"variables",id:"variables",title:"Variables",description:"This page summarizes the most important information about variables in Robot Framework.",source:"@site/docs/variables.mdx",sourceDirName:".",slug:"/variables",permalink:"/docs/variables",draft:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/variables.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Variables",title:"Variables"},sidebar:"tutorialSidebar",previous:{title:"DataDriven Tests",permalink:"/docs/testcase_styles/datadriven"}},o={},m=[{value:"*** Variables *** Section",id:"-variables--section",level:2},{value:"Set Variables in Test Cases and Keywords",id:"set-variables-in-test-cases-and-keywords",level:2},{value:"When to use $ and @ and &amp; and %?",id:"when-to-use--and--and--and-",level:2},{value:"Variable Files",id:"variable-files",level:2}],p={toc:m};function b(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page summarizes the most important information about variables in Robot Framework.",(0,r.kt)("br",{parentName:"p"}),"\n","For more information, please refer to the official ",(0,r.kt)("a",{parentName:"p",href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#variables"},"Robot Framework User Guide"),"."),(0,r.kt)("h2",{id:"-variables--section"},"*","*","*"," Variables ","*","*","*"," Section"),(0,r.kt)("p",null,"Variables which are defined in the ","*","*","*"," Variables ","*","*","*"," section are available in all test cases and keywords in the same file.",(0,r.kt)("br",{parentName:"p"}),"\n","Variables defined in the ","*","*","*"," Variables ","*","*","*"," section are ",(0,r.kt)("strong",{parentName:"p"},"suite")," variables.",(0,r.kt)("br",{parentName:"p"}),"\n","If a ",(0,r.kt)("inlineCode",{parentName:"p"},".resource")," or a ",(0,r.kt)("inlineCode",{parentName:"p"},".robot")," file with a ","*","*","*"," Variables ","*","*","*"," section is imported into a test suite, the variables there also become ",(0,r.kt)("strong",{parentName:"p"},"suite")," variables."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Variables ***\n${my_var}     my_value\n@{my_list}    Apple    Banana    Orange\n&{my_dict}    name=my_value1    password=my_value2\n\n*** Test Cases ***\nTest Case 1\n    Log    ${my_var}\n    Log    ${my_list}\n    Log    ${my_dict}\n    FOR    ${item}    IN    @{my_list}\n        Log    ${item}\n    END\n    Log    ${my_dict}[name]\n    Log    ${my_dict}[password]\n    FOR   ${key}    ${value}    IN    &{my_dict}\n        Log Many    ${key}    ${value}\n    END\n    My Keyword\n\n*** Keywords ***\nMy Keyword\n    Log Many    ${my_var}    ${my_list}    ${my_dict}    \n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Let me run it"),(0,r.kt)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variables_section",width:"100%",height:"600"})),(0,r.kt)("h2",{id:"set-variables-in-test-cases-and-keywords"},"Set Variables in Test Cases and Keywords"),(0,r.kt)("p",null,"Besides the ","*","*","*"," Variables ","*","*","*"," section, variables can also be set dynamically in test cases and keywords.\nVariables are set by the return value of a keyword.\nThere are some Keywords which set variables values explicitly, like"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Variable"},"Set Variable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Test%20Variable"},"Set Test Variable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Suite%20Variable"},"Set Suite Variable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Global%20Variable"},"Set Global Variable"))),(0,r.kt)("p",null,"They can be used to either ",(0,r.kt)("strong",{parentName:"p"},"set a value")," of a variable or ",(0,r.kt)("strong",{parentName:"p"},"change the scope")," of a variable."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Test Cases ***\n\nTest Case 1\n    ${my_local_var}    Set Variable    Hello World\n    Log    ${my_local_var}    # Pass: Logs the value of the variable\n    Set Suite Variable    ${my_suite_var}    I'm a suite variable\n    Set Global Variable    ${my_global_var}    I'm a global variable\n\nTest Case 2\n    Log    ${my_local_var}    # Fails: Variable only exists in the scope of Test Case 1\n    Log    ${my_suite_var}    # Pass: Variable exists for the scope of the whole suite\n    Log    ${my_global_var}   # Pass: Variable exists for the scope of the whole test run\n\nTest Case 3\n    My Keyword\n    Log    ${my_keyword_var}    # Fails: Variable only exists in the scope of My Keyword\n    Log    ${my_test_var}    # Pass: Variable  exists in the scope of the test case\n\n*** Keywords ***\nMy Keyword\n    ${my_keyword_var}    Set Variable    Hello Keyword\n    Log    ${my_keyword_var}    # Pass: Logs the value of the variable\n    Set Test Variable    ${my_test_var}    I'm a test case variable   \n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Let me run it"),(0,r.kt)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variable_scopes",width:"100%",height:"600"})),(0,r.kt)("h2",{id:"when-to-use--and--and--and-"},"When to use $ and @ and & and %?"),(0,r.kt)("p",null,"Variable Names consist of "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a variable type identifier (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"$"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"@"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"&"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"%"),")"),(0,r.kt)("li",{parentName:"ul"},"curly braces ",(0,r.kt)("inlineCode",{parentName:"li"},"{}")),(0,r.kt)("li",{parentName:"ul"},"a variable name (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"my_var"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"my_list"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"my_dict"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"my_var2"),")")),(0,r.kt)("p",null,"The variable type identifier is used to define the type of the variable."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$")," is used for scalar variables."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@")," is used for list variables."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"&")," is used for dictionary variables."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%")," is used for environment variables.")),(0,r.kt)("p",null,"What is the difference between a scalar variable, a list variable and a dictionary?",(0,r.kt)("br",{parentName:"p"}),"\n","A scalar variable can only contain ",(0,r.kt)("strong",{parentName:"p"},"one value"),".",(0,r.kt)("br",{parentName:"p"}),"\n","A list variable can contain ",(0,r.kt)("strong",{parentName:"p"},"multiple values"),".",(0,r.kt)("br",{parentName:"p"}),"\n","A dictionary variable can contain ",(0,r.kt)("strong",{parentName:"p"},"multiple key-value pairs"),"."),(0,r.kt)("p",null,"But why can we access a list variable ",(0,r.kt)("inlineCode",{parentName:"p"},"my_list")," with the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"${my_list}")," and also with the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"@{my_list}"),"?"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"${my_list}")," accesses the whole list object ",(0,r.kt)("inlineCode",{parentName:"p"},"my_list"),". It is a container and holds all the items of the list.\nYou can use it to access the whole list variable ",(0,r.kt)("inlineCode",{parentName:"p"},"my_list")," or to access a specific item of the list with the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"${my_list}[index]"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@{my_list}")," accesses the items of the list variable ",(0,r.kt)("inlineCode",{parentName:"p"},"my_list"),". It is like the list variable ",(0,r.kt)("inlineCode",{parentName:"p"},"my_list")," is unpacked and all the items are available as individual variables."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-robotframework"},"*** Variables ***\n@{my_list}    Apple    Banana    Orange\n\n*** Test Cases ***\nTest Case 1\n    Log    ${my_list}   # Pass: Logs the whole list object\n    Log Many    @{my_list}   # Pass: Logs the items of the list object\n    Log Many    ${my_list}   # Pass: Logs the whole list object\n    Log List    ${my_list}   # Pass: Logs the whole list object\n    Log    ${my_list}[0]    # Pass: Logs the first item of the list object\n    Log    @{my_list}[0]    # Fail: @{my_list} is not a list object and does not have an index\n    Log    @{my_list}       # Fail: The second argument of the Log keyword `level` only allows the values `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `NONE`.\n                            # The value `Banana` for the argument `level` is not allowed.\n    Log    ${my_list}[0]    ${my_list}[1]   ${my_list}[2]   # Fail: Same as above    \n    FOR    ${item}    IN    @{my_list}  # Pass: Iterates over the items of the list object\n        Log    ${item}                  # Pass: Logs the items of the list object   \n    END\n")),(0,r.kt)("p",null,"Whenever you want to access the container of a list variable, you have to use the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"${my_list}"),".",(0,r.kt)("br",{parentName:"p"}),"\n","When you want to break down the list variable into its items, you have to use the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"@{my_list}"),"."),(0,r.kt)("p",null,"It's like a beer crate with bottles inside.",(0,r.kt)("br",{parentName:"p"}),"\n","With the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"${beer_crate}")," you can access the whole beer crate.",(0,r.kt)("br",{parentName:"p"}),"\n","With the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"@{beer_crate}")," you get the bottles.",(0,r.kt)("br",{parentName:"p"}),"\n","With the syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"${beer_crate}[index]")," you get a specific bottle inside the crate."),(0,r.kt)("h2",{id:"variable-files"},"Variable Files"),(0,r.kt)("p",null,"It is possible to load variables from external files, like Python (",(0,r.kt)("inlineCode",{parentName:"p"},".py"),") or ",(0,r.kt)("inlineCode",{parentName:"p"},".yaml")," files.",(0,r.kt)("br",{parentName:"p"}),"\n","For Yaml files, the package ",(0,r.kt)("inlineCode",{parentName:"p"},"pyyaml")," is required."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pip install pyyaml\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".py")," files will be interpreted as Python Code, so you can create simple variables, lists or dictionaries and even complex objects like classes.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="PythonVariables.py"',title:'"PythonVariables.py"'},"class TestEnv:\n    ip = '123.4.5.6'\n    user = 'robot'\n    roles = ['admin', 'user']\n\nmy_var = 'Hello World'\nmy_list = [\"Apple\", \"Banana\", \"Cherry\"]\nmy_dict = {'name': 'John', 'age': 36}\n")),(0,r.kt)("p",null,"Even dynamic variables using are possible by executing any Python code inside the variable file.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="DynamicVariables.py"',title:'"DynamicVariables.py"'},"import os\nimport random\nimport time\nimport math\n\nUSER = os.getlogin()                # current login name\nRANDOM_INT = random.randint(0, 10)  # random integer in range [0,10]\nCURRENT_TIME = time.asctime()       # timestamp like 'Thu Apr  6 12:45:21 2006'\nif time.localtime()[3] > 12:\n    AFTERNOON = True\nelse:\n    AFTERNOON = False\n\ndef get_area(diameter):\n    radius = diameter / 2\n    area = math.pi * radius * radius\n    return area\n\nAREA1 = get_area(1)\nAREA2 = get_area(2)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".yaml")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},".yml"),") files will be interpreted as a dictionary."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="YamlVariables.yml"',title:'"YamlVariables.yml"'},"# These are scalars:\nbase_url: https://qaserver.mycompany.com:8080\nadmin_user: iAmAdMiN\nadmin_password: eieioscoobydoo1234\n# Now, a list:\nyaml_list:\n     - Item 1\n     - Item two\n     - 3\n# Finally, a dictionary:\nyaml_dict:\n     key_1: A string\n     key_2: 1 # an int\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-robotframework",metastring:'title="TestSuite.robot"',title:'"TestSuite.robot"'},"*** Settings ***\nVariables    PythonVariables.py\nVariables    YamlVariables.yaml\nVariables    DynamicVariables.py\n\n*** Test Cases ***\nAccess Python Variables\n    Log   ${TestEnv.ip}\n    Log    ${TestEnv.roles}\n    Log Many   @{TestEnv.roles}\n    Log    ${my_var}\n    Log Many   @{my_list}\n    Log Many   &{my_dict}\n    FOR    ${item}    IN    @{my_list}\n        Log    ${item}\n    END\n\nAccess Yaml Variables\n    Log        ${base_url}\n    Log Many   @{yaml_list}\n    Log        ${yaml_dict}\n    Log        ${yaml_dict}[key_1]\n\nAccess Dynamic Variables\n    Log   ${USER}\n    Log   ${RANDOM_INT}\n    Log   ${CURRENT_TIME}\n    Log   ${AFTERNOON}\n    Log   ${AREA1}\n    Log   ${AREA2}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Let me run it"),(0,r.kt)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variable_files",width:"100%",height:"600"})))}b.isMDXComponent=!0}}]);